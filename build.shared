apply plugin: 'java'
apply plugin: 'maven'

repositories {
  mavenCentral()
}

dependencies {
  testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
  moduleInfo {
    java {
      srcDir 'src/module-info/java'
    }
  }
}

compileModuleInfoJava {
  sourceCompatibility = 9
  targetCompatibility = 9

  inputs.property("moduleName", moduleName)

  doFirst {
    classpath += sourceSets.main.compileClasspath

    options.compilerArgs = [
                            '--module-path', classpath.asPath,
                            '-d', sourceSets.main.output.classesDirs.asPath
                           ]
  }
}

compileJava {
  options.compilerArgs << "-Xlint:all" << "-Xlint:-deprecation" << "-Werror"
}

compileTestJava {
  options.compilerArgs << "-Xlint:all"
}

test {
  getReports().getJunitXml().setDestination(file("$buildDir/reports/tests/xml"))
  getReports().getHtml().setDestination(file("$buildDir/reports/tests/html"))
  setBinResultsDir(file("$buildDir/reports/tests/bin"))
}

jar {
  from sourceSets.main.output
  from sourceSets.moduleInfo.output

  manifest {
    attributes 'Implementation-Title': 'Threadly', 'Implementation-Version': version
  }
}

javadoc {
  source = sourceSets.main.allJava
  excludes = ['**/ThreadlyInternalAccessor**', '**/ArgumentVerifier**']
  options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PUBLIC
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

artifacts {
  archives jar
  archives javadocJar
  archives sourcesJar
}
